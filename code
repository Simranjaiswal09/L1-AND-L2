code1:-#include <stdio.h>

int findMax(int a, int b) {
    if (a > b) {
        return a;
    } else {
        return b;
    }
}
code2:-#include <stdio.h>

void printGrade(int marks) {
    if (marks >= 90 && marks <= 100) {
        printf("Grade A\n");
    } else if (marks >= 75 && marks <= 89) {
        printf("Grade B\n");
    } else if (marks >= 60 && marks <= 74) {
        printf("Grade C\n");
    } else if (marks >= 50 && marks <= 59) {
        printf("Grade D\n");
    } else if (marks >= 0 && marks <= 49) {
        printf("Grade F\n");
    } else {
        printf("Invalid marks\n");
    }
}
code3:-
#include <stdio.h>

typedef struct {
    int rollNo;
    char name[100];
    int physicsMarks;
    int mathMarks;
    int chemistryMarks;
} Student;

void calculateSummary(Student student) {
    int totalMarks = student.physicsMarks + student.mathMarks + student.chemistryMarks;
    float percentage = (float)totalMarks / 3;

    printf("Roll No: %d\n", student.rollNo);
    printf("Name: %s\n", student.name);
    printf("Physics Marks: %d\n", student.physicsMarks);
    printf("Math Marks: %d\n", student.mathMarks);
    printf("Chemistry Marks: %d\n", student.chemistryMarks);
    printf("Total Marks: %d\n", totalMarks);
    printf("Percentage: %.2f\n", percentage);
}

int main() {
    Student student;

    printf("Enter Roll No: ");
    scanf("%d", &student.rollNo);

    printf("Enter Name: ");
    scanf(" %[^\n]", student.name);

    printf("Enter Physics Marks: ");
    scanf("%d", &student.physicsMarks);

    printf("Enter Math Marks: ");
    scanf("%d", &student.mathMarks);

    printf("Enter Chemistry Marks: ");
    scanf("%d", &student.chemistryMarks);

    calculateSummary(student);

    return 0;
}
code4:-#include <stdio.h>

int main() {
    int num1, num2;
    char operator;

    printf("Enter Number1: ");
    scanf("%d", &num1);

    printf("Enter the operator: ");
    scanf(" %c", &operator);

    printf("Enter Number2: ");
    scanf("%d", &num2);

    int result;

    switch (operator) {
        case '+':
            result = num1 + num2;
            break;
        case '-':
            result = num1 - num2;
            break;
        case '*':
            result = num1 * num2;
            break;
        case '/':
            if (num2 != 0) {
                result = num1 / num2;
            } else {
                printf("Error: Division by zero\n");
                return 1;
            }
            break;
        default:
            printf("Error: Invalid operator\n");
            return 1;
    }

    printf("Result: %d\n", result);

    return 0;
}
code 5:-#include <stdio.h>

int bit_operations(int num,
LEVEL 2:-
code 1:-
#include <stdio.h>

int findMax(int a, int b, int c) {
    if (a > b && a > c) {
        return a;
    } else if (b > c) {
        return b;
    } else {
        return c;
    }
}
code 2:-
#include <stdio.h>

char getGrade(int marks) {
    char grade;

    switch (marks) {
        case 90 ... 100:
            grade = 'A';
            break;
        case 75 ... 89:
            grade = 'B';
            break;
        case 60 ... 74:
            grade = 'C';
            break;
        case 50 ... 59:
            grade = 'D';
            break;
        case 36 ... 49:
            grade = 'E';
            break;
        case 0 ... 35:
            grade = 'F';
            break;
        default:
            grade = 'X';  // Invalid grade
    }

    return grade;
}

int main() {
    int marks;
    printf("Enter marks: ");
    scanf("%d", &marks);

    char grade = getGrade(marks);

    switch (grade) {
        case 'A':
            printf("Grade A\n");
            break;
        case 'B':
            printf("Grade B\n");
            break;
        case 'C':
            printf("Grade C\n");
            break;
        case 'D':
            printf("Grade D\n");
            break;
        case 'E':
            printf("Grade E\n");
            break;
        case 'F':
            printf("Grade F\n");
            break;
        default:
            printf("Invalid grade\n");
    }

    return 0;
}
code3:-
#include <stdio.h>

int isVowel(char ch) {
    switch (ch) {
        case 'a':
        case 'e':
        case 'i':
        case 'o':
        case 'u':
        case 'A':
        case 'E':
        case 'I':
        case 'O':
        case 'U':
            return 1;
        default:
            return 0;
    }
}

int main() {
    char ch;
    printf("Enter a character: ");
    scanf(" %c", &ch);

    if (isVowel(ch)) {
        printf("Vowel\n");
    } else {
        printf("Not Vowel\n");
    }

    return 0;
}
code4:-
#include <stdio.h>

int bit_operations(int num, int oper_type, int pos) {
    switch (oper_type) {
        case 1:
            num |= (1 << pos);  // Set bit at position pos
            break;
        case 2:
            num &= ~(7 << pos);  // Clear 3 bits from position pos
            break;
        case 3:
            num ^= (1 << 31);  // Toggle MSB (31st bit)
            break;
        default:
            printf("Invalid operation type\n");
            return num;
    }

    return num;
}

int main() {
    int num, oper_type, pos;
    printf("Enter an integer: ");
    scanf("%d", &num);

    printf("Enter the operation type (1, 2, or 3): ");
    scanf("%d", &oper_type);

    printf("Enter the position: ");
code 5:-
#include <stdio.h>

int findCharType(char ch) {
    if (ch >= 'A' && ch <= 'Z') {
        return 1;
    } else if (ch >= 'a' && ch <= 'z') {
        return 2;
    } else if (ch >= '0' && ch <= '9') {
        return 3;
    } else if (ch >= 32 && ch <= 126) {
        return 4;
    } else {
        return 5;
    }
}

int main() {
    char ch;
    printf("Enter a character: ");
    scanf(" %c", &ch);

    int charType = findCharType(ch);

    switch (charType) {
        case 1:
            printf("Type: 'A' to 'Z'\n");
            break;
        case 2:
            printf("Type: 'a' to 'z'\n");
            break;
        case 3:
            printf("Type: '0' to '9'\n");
            break;
        case 4:
            printf("Type: Any other printable symbol\n");
            break;
        case 5:
            printf("Type: Non-printable symbol\n");
            break;
        default:
            printf("Invalid character type\n");
    }

    return 0;
}
